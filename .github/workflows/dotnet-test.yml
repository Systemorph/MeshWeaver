# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MeshWeaver Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Run Unit tests

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore workloads
      run: dotnet workload restore
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -p:CIRun=true
    - name: Copy test appsettings for logging
      run: cp test/appsettings.json ./appsettings.json
    - name: Run Tests
      continue-on-error: true
      env:
        DOTNET_ENVIRONMENT: Development
        Logging__LogLevel__Default: Debug
        Logging__LogLevel__MeshWeaver.Messaging: Debug
      run: |
        dotnet test --no-build --verbosity detailed -l:trx -- RunConfiguration.TestSessionTimeout=60000 | tee test/test-results.log
    - name: Collect logs for artifact
      if: always()
      run: |
        mkdir -p collected-logs
        # Find all meshweaver log files and rename them based on their test project path
        find . -name "*meshweaver*.log" -type f | while read logfile; do
          # Extract test project name from path (e.g., test/MeshWeaver.Data.Test/bin/... -> MeshWeaver.Data.Test)
          testproject=$(echo "$logfile" | sed -n 's|.*test/\([^/]*\)/.*|\1|p')
          if [ -n "$testproject" ]; then
            # Get the original filename without path
            filename=$(basename "$logfile")
            # Create new name: TestProject.original-filename
            newname="${testproject}.${filename}"
            cp "$logfile" "collected-logs/${newname}" 2>/dev/null || true
          else
            # If we can't extract test project name, just copy as-is
            cp "$logfile" "collected-logs/" 2>/dev/null || true
          fi
        done
        # Also collect any other logs from test bin directories
        find . -path "*/bin/*/logs/*.log" -type f | while read logfile; do
          testproject=$(echo "$logfile" | sed -n 's|.*test/\([^/]*\)/.*|\1|p')
          if [ -n "$testproject" ]; then
            filename=$(basename "$logfile")
            newname="${testproject}.${filename}"
            cp "$logfile" "collected-logs/${newname}" 2>/dev/null || true
          fi
        done
    - name: Publish Test Results
#      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      uses: EnricoMi/publish-unit-test-result-action@v2.12.0
      if: always()
      with:
        action_fail: true
        # File patterns of test result files. Relative paths are known to work best, while the composite action also works with absolute paths. Supports "*", "**", "?", and "[]" character ranges. Use multiline string for multiple patterns. Patterns starting with "!" exclude the matching files. There have to be at least one pattern starting without a "!". 
        files: |
          test/**/*.trx
    - name: "Upload artifact: Test Results"
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: testResults
        path: |
          test/**/*.trx
          test/test-results.log
          collected-logs/
        compression-level: 9
        retention-days: 15
