{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "meshweaverblobs": {
      "type": "azure.bicep.v0",
      "path": "meshweaverblobs.module.bicep",
      "params": {
        "principalId": "",
        "principalType": ""
      }
    },
    "postgres": {
      "type": "container.v0",
      "connectionString": "Host={postgres.bindings.tcp.host};Port={postgres.bindings.tcp.port};Username=postgres;Password={postgres-password.value}",
      "image": "docker.io/library/postgres:17.0",
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{postgres-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "postgresdb": {
      "type": "value.v0",
      "connectionString": "{postgres.connectionString};Database=postgresdb"
    },
    "orleans-redis": {
      "type": "container.v0",
      "connectionString": "{orleans-redis.bindings.tcp.host}:{orleans-redis.bindings.tcp.port}",
      "image": "docker.io/library/redis:7.4",
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "address-registry": {
      "type": "container.v0",
      "connectionString": "{address-registry.bindings.tcp.host}:{address-registry.bindings.tcp.port}",
      "image": "docker.io/library/redis:7.4",
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "mesh-catalog": {
      "type": "value.v0",
      "connectionString": "{meshweaverblobs.outputs.tableEndpoint}"
    },
    "activity": {
      "type": "value.v0",
      "connectionString": "{meshweaverblobs.outputs.tableEndpoint}"
    },
    "silo": {
      "type": "project.v0",
      "path": "../MeshWeaver.Portal.Orleans/MeshWeaver.Portal.Orleans.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{silo.bindings.http.targetPort}",
        "Orleans__Clustering__ProviderType": "Redis",
        "Orleans__Clustering__ServiceKey": "orleans-redis",
        "ConnectionStrings__orleans-redis": "{orleans-redis.connectionString}",
        "Orleans__ClusterId": "{mesh-cluster-id.value}",
        "Orleans__ServiceId": "{mesh-service-id.value}",
        "Orleans__EnableDistributedTracing": "true",
        "Orleans__GrainStorage__address-registry__ProviderType": "Redis",
        "Orleans__GrainStorage__address-registry__ServiceKey": "address-registry",
        "ConnectionStrings__address-registry": "{address-registry.connectionString}",
        "Orleans__GrainStorage__mesh-catalog__ProviderType": "AzureTableStorage",
        "Orleans__GrainStorage__mesh-catalog__ServiceKey": "mesh-catalog",
        "ConnectionStrings__mesh-catalog": "{mesh-catalog.connectionString}",
        "Orleans__GrainStorage__activity__ProviderType": "AzureTableStorage",
        "Orleans__GrainStorage__activity__ServiceKey": "activity",
        "ConnectionStrings__activity": "{activity.connectionString}",
        "Orleans__Endpoints__SiloPort": "{silo.bindings.orleans-silo.targetPort}",
        "Orleans__Endpoints__GatewayPort": "{silo.bindings.orleans-gateway.targetPort}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        },
        "orleans-silo": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 8000
        },
        "orleans-gateway": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 8001
        }
      }
    },
    "frontend": {
      "type": "project.v0",
      "path": "../MeshWeaver.Portal.Web/MeshWeaver.Portal.Web.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{frontend.bindings.http.targetPort}",
        "Orleans__Clustering__ProviderType": "Redis",
        "Orleans__Clustering__ServiceKey": "orleans-redis",
        "ConnectionStrings__orleans-redis": "{orleans-redis.connectionString}",
        "Orleans__ClusterId": "{mesh-cluster-id.value}",
        "Orleans__ServiceId": "{mesh-service-id.value}",
        "Orleans__EnableDistributedTracing": "true",
        "ConnectionStrings__postgresdb": "{postgresdb.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http",
          "external": true
        }
      }
    },
    "postgres-password": {
      "type": "parameter.v0",
      "value": "{postgres-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "mesh-cluster-id": {
      "type": "parameter.v0",
      "value": "{mesh-cluster-id.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "default": {
            "generate": {
              "minLength": 25,
              "upper": false,
              "special": false
            }
          }
        }
      }
    },
    "mesh-service-id": {
      "type": "parameter.v0",
      "value": "{mesh-service-id.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "default": {
            "generate": {
              "minLength": 25,
              "upper": false,
              "special": false
            }
          }
        }
      }
    }
  }
}