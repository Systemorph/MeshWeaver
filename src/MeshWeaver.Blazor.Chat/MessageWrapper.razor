@using ChatMessage = Microsoft.Extensions.AI.ChatMessage

<ChatMessageItem Message="@Message" InProgress="@InProgress" />

@code {
    [Parameter, EditorRequired]
    public required ChatMessage Message { get; set; }

    [Parameter]
    public bool InProgress { get; set; }

    private ChatMessage? previousMessage;

    protected override bool ShouldRender()
    {
        // Only re-render if the message has actually changed
        if (previousMessage == null || !ReferenceEquals(previousMessage, Message))
        {
            previousMessage = Message;
            return true;
        }
        
        // For in-progress messages, we need to check if the content has changed
        if (InProgress && previousMessage != null)
        {
            var hasChanged = !string.Equals(previousMessage.Text, Message.Text, StringComparison.Ordinal);
            if (hasChanged)
            {
                previousMessage = Message;
                return true;
            }
        }

        return false;
    }
}