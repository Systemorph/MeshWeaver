@using MeshWeaver.Articles
@using MeshWeaver.Blazor.Infrastructure
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Filled
@inherits BlazorView<ArticleCatalogItemControl, ArticleCatalogItemView>

<a href="@Data.Url" class="article-card-link">
    <article class="article-card">
        <div class="header">
            <div class="author-info">
                @foreach (var author in Data.AuthorDetails)
                {
                    <div class="author">
                        <FluentPersona Name="@author.FormatName()" ImageSize="24px" Image="@author.ImageUrl"/>
                    </div>
                }
            </div>
            <div class="publish-info">
                <span class="publish-date">@PublishedDate</span>
                @if (IsNewArticle)
                {
                    <span class="new-indicator"></span>
                }
            </div>
        </div>
        <div class="content">
            <div class="text">
                <h3 class="title">@Data.Title</h3>
                <p class="summary">@Data.Abstract</p>
                @if (HasVideo)
                {
                    <div class="video-info">
                        <FluentIcon Title="Video" Value="@(new Size20.Video())" />
                        <span>@VideoDuration</span>
                    </div>
                }
            </div>
            <div class="thumbnail">
                <img alt="@Data.Title" src="@Thumbnail" width="160" height="160" />
            </div>
        </div>
    </article>
</a>

@code
{
    private Article Data { get; set; }
    private string PublishedDate => Data.Published.Year == DateTime.Now.Year ? Data.Published.ToString("dd MMM") : Data.Published.ToString("dd MMM yyyy");
    private bool IsNewArticle => (DateTime.Now - Data.Published).TotalDays <= 7;
    private bool HasVideo => !string.IsNullOrEmpty(Data.VideoUrl);
    private string VideoDuration => Data.VideoDuration.ToString(@"hh\:mm\:ss");

    private string ImageBasePath => $"static/{Data.Collection}";
    private string Avatar => $"{ImageBasePath}/avatars/{Data.AuthorAvatar}";
    private string Thumbnail => $"{ImageBasePath}/{Data.Thumbnail}";

    protected override void BindData()
    {
        base.BindData();

        if (ViewModel != null)
        {
            DataBind(ViewModel.Article, x => x.Data);
        }
    }
}