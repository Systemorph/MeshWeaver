@using System.Text.Json.Nodes
@using MeshWeaver.Layout.DataGrid
@using MeshWeaver.Messaging.Serialization
@inherits BlazorView<DataGridControl, DataGridView>
@inject NavigationManager NavigationManager

<div style="display: table; table-layout: fixed; width: 100%;" class="@Class">
    <div style="overflow-x: auto;">
        <FluentDataGrid Items="@QueryableData"
                        Virtualize="@Virtualize"
                        ItemSize="@ItemSize"
                        ResizableColumns="@ResizableColumns"
                        GenerateHeader="GenerateHeaderOption.Sticky"
                        Pagination="@Pagination"
                        Style="@Style">
            @foreach (var column in ViewModel.Columns)
            {
                if(column is PropertyColumnControl propertyColumn)
                {
                    @((RenderFragment)(builder => RenderPropertyColumn(builder, propertyColumn)))
                }
                else if(column is TemplateColumnControl templateColumn)
                {
                    <TemplateColumn TGridItem="JsonObject">
                        <FluentButton aria-label="Details" IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => NavigateToUrl(context, Details))" />
@*                         <FluentButton aria-label="Delete" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => NavigateToUrl(context, Delete))" />
 *@
                    </TemplateColumn>
                }
                else
                {
                    throw new NotImplementedException();
                }
            }
        </FluentDataGrid>
    </div>
</div>

<div class="paginator">
    @if (Pagination.TotalItemCount.HasValue && Pagination.TotalItemCount > Pagination.ItemsPerPage)
    {
        <FluentPaginator State="@Pagination"/>
    }
</div>


