@using Microsoft.AspNetCore.Components.Forms
@using Appearance = Microsoft.FluentUI.AspNetCore.Components.Appearance
@inherits SkinnedView<EditFormControl, EditFormSkin, EditFormView>
@inject IToastService ToastService;

@if (model == null)
{    
    <FluentProgressRing style="width: 102px; height: 102px;" />
}
else
{
    <CascadingValue Name="Model" Value="@model">
        <EditForm Model="@model" OnValidSubmit="Submit" >
            <div>
                <dl class="form-group">
                        <DispatchView ViewModel="@ViewModel" Area="@Area" Stream="@Stream"></DispatchView>
                </dl>
                @if(Log != null)
                {
                    <div class="validation-errors">
                        <h5>Validation failed</h5>
                        <ul>
                            @foreach (var logMessage in Log.Messages)
                            {
                                <li>@logMessage</li>
                        
                            }

                        </ul>
                    </div>
                }
                <FluentButton Appearance="Appearance.Accent" type="@ButtonType.Submit" class="btn btn-primary" disabled="@model.IsUpToDate">Update</FluentButton>
                <FluentButton Appearance="Appearance.Lightweight" type="@ButtonType.Reset" class="btn btn-secondary" @onclick="Reset" disabled="@model.IsUpToDate">Reset</FluentButton>
            </div>
        </EditForm>
    </CascadingValue>
}