@using System.Reactive.Linq
@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@inherits BlazorView<ItemTemplateControl, ItemTemplate>

@if (Data != null)
{
    <FluentStack
        Class="@Class"
        Style="@Style"
        Orientation="@Orientation"
        Wrap="@ViewModel.Wrap"
    >
        @for (int i=0;i<Data.Count;++i)
        {
            <DispatchView ViewModel="@GetViewWithPath(i)" Stream="@Stream" Area="@ViewArea" />
        }
    </FluentStack>
}

@code
{
    private IReadOnlyCollection<object> Data { get; set; } = Array.Empty<object>();
    private Orientation Orientation { get; set; }
    private UiControl view;

    private string ViewArea => $"{Area}/{ItemTemplateControl.ViewArea}";

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        DataBind(ViewModel.Data, d => d.Data);
        view = Stream.GetControl(await Stream.FirstAsync(), ViewArea);
    }

    private UiControl GetViewWithPath(int i) => ViewModel.View with { DataContext = $"{ViewModel.DataContext}{ViewModel.Data}/{i}" };

}
