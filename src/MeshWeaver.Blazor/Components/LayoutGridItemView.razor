@using JustifyContent = Microsoft.FluentUI.AspNetCore.Components.JustifyContent
@inherits SkinnedView<LayoutGridItemSkin, LayoutGridItemView>

<FluentGridItem
    AdaptiveRendering="@AdaptiveRendering"
    Gap="@Gap"
    HiddenWhen="@HiddenWhen"
    Justify="@Justify"
    lg="@Lg"
    md="@Md"
    sm="@Sm"
    xl="@Xl"
    xs="@Xs"
    xxl="@Xxl">
    <DispatchView ViewModel="@ViewModel" Stream="@Stream" Area="@Area"/>
</FluentGridItem>

@code
{
    private bool AdaptiveRendering { get; set; }
    private string Gap { get; set; }
    private GridItemHidden? HiddenWhen { get; set; }
    private JustifyContent? Justify { get; set; }
    private int? Lg { get; set; }
    private int? Md { get; set; }
    private int? Sm { get; set; }
    private int? Xl { get; set; }
    private int? Xs { get; set; }
    private int? Xxl { get; set; }

    protected override void BindData()
    {
        base.BindData();
        DataBind(Skin.AdaptiveRendering, x => x.AdaptiveRendering);
        DataBind(Skin.Gap, x => x.Gap);
        DataBind(Skin.HiddenWhen, x => x.HiddenWhen);
        DataBind(Skin.Justify, x => x.Justify);
        DataBind(Skin.Lg, x => x.Lg);
        DataBind(Skin.Md, x => x.Md);
        DataBind(Skin.Sm, x => x.Sm);
        DataBind(Skin.Xl, x => x.Xl);
        DataBind(Skin.Xs, x => x.Xs);
        DataBind(Skin.Xxl, x => x.Xxl);
    }
}
