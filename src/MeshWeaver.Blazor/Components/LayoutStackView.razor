@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@inherits SkinnedView<LayoutStackControl, LayoutStackSkin, LayoutStackView>

<FluentStack
    Class="@Class"
    Orientation="@Orientation"
    HorizontalAlignment="@Horizontal"
    VerticalAlignment="@Vertical"
    Width="@Width"
    VerticalGap="@VerticalGap"
    HorizontalGap="@HorizontalGap"
    Style="@Style"
    Wrap="@Wrap"
    >
        <DispatchView ViewModel="@ViewModel" Stream="@Stream" Area="@Area"  />
</FluentStack>

@code{
    private string Width { get; set; }
    private string Height { get; set; }
    private int? VerticalGap { get; set; }
    private int? HorizontalGap { get; set; }
    private bool Wrap { get; set; }
    private Microsoft.FluentUI.AspNetCore.Components.VerticalAlignment Vertical { get; set; }
    private Microsoft.FluentUI.AspNetCore.Components.HorizontalAlignment Horizontal { get; set; }
    private Orientation Orientation { get; set; }
    protected override void BindData()
    {
        base.BindData();
        DataBind(Skin.Height, x => x.Height);
        DataBind(Skin.Width, x => x.Width);
        DataBind(Skin.VerticalGap, x => x.VerticalGap);
        DataBind(Skin.HorizontalGap, x => x.HorizontalGap);
        DataBind(Skin.VerticalAlignment, x => x.Vertical);
        DataBind(Skin.HorizontalAlignment, x => x.Horizontal);
        DataBind(Skin.Orientation, x => x.Orientation);
    }




}
