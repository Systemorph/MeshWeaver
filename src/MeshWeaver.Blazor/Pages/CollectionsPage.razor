@page "/collections/{**FullPath}"
@using Microsoft.AspNetCore.Components.Authorization
@using MeshWeaver.Blazor.FileExplorer
@using MeshWeaver.ContentCollections
@inject IContentService ContentService

<PageTitle>Browse @Collection</PageTitle>
<AuthorizeView Roles="@Roles.PortalAdmin">
    <Authorized>
        @if (collectionExists)
        {
            <FileBrowser CollectionName="@Collection" ShowCollectionSelection="@true" CurrentPath="@Path"></FileBrowser>
        }
        else if (!string.IsNullOrEmpty(Collection))
        {
            <div class="collection-not-found">
                <h3>Collection Not Found</h3>
                <p>The collection '@Collection' does not exist or is not configured.</p>
                <p>Please check the collection name in the URL or contact your system administrator.</p>
                <a href="/collections">Browse available collections</a>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <h3>Access Denied</h3>
        You need to have Portal Administrator role to administer collections. Please contact your system administrator
    </NotAuthorized>
</AuthorizeView>
@code {
    [Parameter] public string? FullPath { get; set; } = "";
    private string? Collection { get; set; } = "";
    private string? Path { get; set; } = "";
    private bool collectionExists = false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (!string.IsNullOrEmpty(FullPath))
        {
            var split = FullPath!.Split('/');
            Collection = split[0];
            Path = string.Join('/', split.Skip(1));
            
            // Validate that the collection exists
            collectionExists = ContentService.GetCollection(Collection) != null;
        }
        else
        {
            collectionExists = false;
        }
    }
}
