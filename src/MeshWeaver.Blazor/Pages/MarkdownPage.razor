@page "/md/{Collection}/{**Path}"
@using System.Reactive.Linq
@using MeshWeaver.Articles
@using MeshWeaver.Blazor.Infrastructure
@inject PortalApplication PortalApplication
@implements IDisposable

<MarkdownView ViewModel="@RootControl"></MarkdownView>

@code
{
    [Parameter] public string Collection { get; set; }
    [Parameter] public string Path { get; set; }

    IDisposable ArticleStreamSubscription { get; set; }
    MarkdownControl RootControl { get; set; }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        // Dispose of previous subscription if it exists
        ArticleStreamSubscription?.Dispose();

        ArticleStreamSubscription = PortalApplication.Hub
            .RenderArticle(Collection, Path)
            .Subscribe(a =>
            {
                RootControl = ConvertToMarkdown(a);
                InvokeAsync(StateHasChanged);
            });
    }

    private MarkdownControl ConvertToMarkdown(object uiControl)
    {
        return uiControl switch
        {
            MarkdownControl markdownControl => markdownControl,
            ArticleControl article => new(null){Html = article.Html},

            _ => new MarkdownControl($"Could not convert control: {uiControl}")
        };
    }

    public void Dispose()
    {
        // This will be called when the component is removed from the UI (user navigates away)
        ArticleStreamSubscription?.Dispose();
    }
}